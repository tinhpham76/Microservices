version: '3.4'

services:
  #############################
  # Database
  #############################
  database:
    image: "mcr.microsoft.com/mssql/server:2019-CU5-ubuntu-18.04"
    container_name: 'database'
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "kAa36qDc"  
      TZ: "Asia/Ho_Chi_Minh"
    ports:
      - "1430:1433" 
    volumes:
    - type: bind
      source: ./DATA-DOCKER/Database/data
      target: /var/opt/mssql/data
    restart: unless-stopped   
    networks: 
      - network-sso              
  #############################
  # Auth Server
  #############################   
  auth-server:
    image: "auth-server"
    container_name: "auth-server"
    build:
      context: ../Backend/auth-server/
      dockerfile: Dockerfile
    environment:
      TZ: "Asia/Ho_Chi_Minh"
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:5001
      SwaggerAuthorityUrl: "http://localhost:5001"
      IssuerUri: "http://auth-server:5001"
      ConnectionStrings:AuthServer: "Server=database;Database=AuthData;User Id=sa;password=kAa36qDc;"
      ConnectionStrings:UserServer: "Server=database;Database=UserData;User Id=sa;password=kAa36qDc;"  
    volumes:
    - type: bind
      source: ./DATA-DOCKER/Backend/auth-server/logs
      target: /app/wwwroot/logs
    depends_on: 
      - "database"
    networks: 
      - network-sso 
    restart: unless-stopped  
  ##############################
  ## Admin Api
  ##############################
  admin-api:
    image: "admin-api"
    container_name: "admin-api"
    build:
      context: ../Backend/admin-api/
      dockerfile: Dockerfile
    environment:
      TZ: "Asia/Ho_Chi_Minh"
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://+:5003
      Authority: "http://auth-server:5001"
      RequireHttpsMetadata: "false"
      SwaggerAuthorityUrl: "http://localhost:5001"
      BackendApiUrl: "http://auth-server:5001"
      ConnectionStrings:DefaultConnection: "Server=database;Database=AuthData;User Id=sa;password=kAa36qDc;"
    volumes:
    - type: bind
      source: ./DATA-DOCKER/Backend/admin-api/logs
      target: /app/wwwroot/logs
    networks: 
      - network-sso 
    restart: unless-stopped 
  ##############################
  ## User Api
  ##############################
  user-api:
    image: "user-api"
    container_name: "user-api"
    build:
      context: ../Backend/user-api/
      dockerfile: Dockerfile
    environment:
      TZ: "Asia/Ho_Chi_Minh"    
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://+:5005
      Authority: "http://auth-server:5001"
      RequireHttpsMetadata: "false"
      SwaggerAuthorityUrl: "http://localhost:5001"
      BackendApiUrl: "http://auth-server:5001"
    volumes:
    - type: bind
      source: ./DATA-DOCKER/Backend/user-api/logs
      target: /app/wwwroot/logs
    networks: 
      - network-sso 
    restart: unless-stopped 
  ##############################
  ## Storage Api
  ##############################
  storage-api:
    image: "storage-api"
    container_name: "storage-api"
    build:
      context: ../Backend/storage-api/
      dockerfile: Dockerfile
    environment:
      TZ: "Asia/Ho_Chi_Minh"
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: http://+:5007
      Authority: "http://auth-server:5001"
      SwaggerAuthorityUrl: "http://localhost:5001"
    volumes:
    - type: bind
      source: ./DATA-DOCKER/Backend/storage-api
      target: /app/wwwroot
    networks: 
      - network-sso 
    restart: unless-stopped 
  ##############################
  ## Nginx proxy
  ##############################
  reverse-proxy:
    container_name: project
    build:
      context: ./nginx/
      dockerfile: nginx.dockerfile
    environment:
      TZ: "Asia/Ho_Chi_Minh"  
    ports:
      - '5001:5001'
      - '5003:5003'
      - '5005:5005'
      - '5007:5007'
    depends_on:
      - 'auth-server'
      - 'admin-api'
      - 'user-api'
      - 'storage-api'
    restart: unless-stopped    
    networks: 
        - network-sso 
  ##############################
  ## Admin app
  ##############################
  admin-app:
    container_name: admin-app
    build:
      context: ../Frontend/admin-app
      dockerfile: Dockerfile
    environment:   
      TZ: "Asia/Ho_Chi_Minh"  
    ports:
      - "4200:4200"
    networks:
      - network-sso
    restart: unless-stopped 
  ##############################
  ## Profile app
  ##############################
  profile-app:
    container_name: profile-app
    build:
      context: ../Frontend/profile-app
      dockerfile: Dockerfile
    environment:   
      TZ: "Asia/Ho_Chi_Minh"   
    ports:
      - "4300:4300"
    networks:
      - network-sso
    restart: unless-stopped   
##############################
## Docker NetWork
##############################
networks:
  network-sso:
    driver: bridge
      